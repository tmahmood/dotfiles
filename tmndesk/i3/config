# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Startup
#__Others__


set $mod Mod4

workspace_auto_back_and_forth yes
popup_during_fullscreen smart


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Maple Mono SC NF 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# ╔═╗┌┬┐┌─┐┬─┐┌┬┐┬ ┬┌─┐
# ╚═╗ │ ├─┤├┬┘ │ │ │├─┘
# ╚═╝ ┴ ┴ ┴┴└─ ┴ └─┘┴  

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Setup xss-lock daemon
# exec_always --no-startup-id xset +dpms dpms 0 300 300 
# exec_always --no-startup-id xss-lock --transfer-sleep-lock -- ~/.config/i3/lock.sh 


# xidlehook --not-when-audio --not-when-fullscreen --timer 360 "betterlockscreen -l dim" "" &
exec_always --no-startup-id xss-lock -l --transfer-sleep-lock -- betterlockscreen -l dim --off 5

exec_always /$HOME/bin/polybar.sh
exec --no-startup-id dunst
# task management
exec --no-startup-id ~/bin/startup
exec --no-startup-id copyq
exec --no-startup-id flameshot

#for_window [class="^.*"] border pixel 0

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# bluetooth device manager
exec --no-startup-id blueman-applet

exec $HOME/.screenlayout/three_monitor.sh
exec_always $HOME/bin/change_wall.sh
exec redshift-gtk -l 23.772113677140343:90.40864299455157

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec wezterm

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindsym $mod+d exec "rofi -modi drun,run -show drun"
# bindsym $mod+Shift+d exec "rofi -modi drun,run -show run"
bindsym $mod+d exec "rofi -show combi -modes combi -combi-modes 'drun,run,window'"

# kill focused window
bindsym $mod+Shift+q kill


# ╔═╗┌─┐┌─┐┬ ┬┌─┐
# ╠╣ │ ││  │ │└─┐
# ╚  └─┘└─┘└─┘└─┘

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# focus the parent container
bindsym $mod+a focus parent
# focus the child container
#bindsym $mod+d focus child

# read 1 character and mark the current window with this character
bindsym $mod+Shift+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '
# read 1 character and go to the window with the character
bindsym $mod+Shift+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '


# ╦  ╔═╗╦ ╦╔═╗╦ ╦╔╦╗
# ║  ╠═╣╚╦╝║ ║║ ║ ║ 
# ╩═╝╩ ╩ ╩ ╚═╝╚═╝ ╩ 

# split in horizontal orientation
bindsym $mod+s split h
# split in vertical orientation
bindsym $mod+Shift+s split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+w layout tabbed
bindsym $mod+Shift+w layout toggle split
bindsym $mod+Shift+Alt+w layout stacking

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
bindsym $mod+q [class="firefox-nightly"] move workspace current

# ╔═╗┌─┐┬─┐┌─┐┌┬┐┌─┐┬ ┬┌─┐┌─┐┌┬┐
# ╚═╗│  ├┬┘├─┤ │ │  ├─┤├─┘├─┤ ││
# ╚═╝└─┘┴└─┴ ┴ ┴ └─┘┴ ┴┴  ┴ ┴─┴┘

bindsym $mod+n scratchpad show 
bindsym $mod+Shift+n move scratchpad 
# move all floating windows to the scratchpad
bindsym $mod+Shift+f [floating] move scratchpad
bindsym $mod+Shift+Ctrl+n [floating] scratchpad show

# ╦ ╦┌─┐┬─┐┬┌─┌─┐┌─┐┌─┐┌─┐┌─┐
# ║║║│ │├┬┘├┴┐└─┐├─┘├─┤│  ├┤ 
# ╚╩╝└─┘┴└─┴ ┴└─┘┴  ┴ ┴└─┘└─┘

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws01 "1"
set $ws02 "2"
set $ws03 "3"
set $ws04 "4"
set $ws05 "5"
set $ws06 "6"
set $ws07 "7"
set $ws08 "8"
set $ws09 "9"
set $ws10 "10"

set $cl1 "rd"
set $cl2 "an"
set $cl3 "jg"

# communication
set $ws11 "cm"
# productivity
set $ws12 "pd"
set $ws13 "mu"

set $ws14 "p1"
set $ws15 "d1"

set $ws16 "p2"
set $ws17 "d2"

set $ws18 "p3"
set $ws19 "d3"

set $ws20 "ms"

set $o1 "DP-0"
set $o2 "HDMI-0"
set $o3 "HDMI-2"

workspace $ws01 output $o1
workspace $ws02 output $o1
workspace $ws03 output $o1
workspace $ws04 output $o1
workspace $ws05 output $o1
workspace $ws06 output $o2
workspace $ws07 output $o2
workspace $ws08 output $o2
workspace $ws09 output $o2

workspace $ws10 output $o2

workspace $ws11 output $o1
workspace $ws12 output $o2

workspace $ws13 output $o1
workspace $ws20 output $o2

workspace $ws14 output $o1
workspace $ws15 output $o2

workspace $ws16 output $o1
workspace $ws17 output $o2

workspace $ws18 output $o1
workspace $ws19 output $o2

# client workspaces
# NOTE: This may change
workspace $cl1 output $o1
workspace $cl2 output $o1
workspace $cl3 output $o1
# other things
workspace "gm" output $o1
workspace "og" output $o2
workspace "nt" output $o3
workspace "uw" output $o2
workspace "fa" output $o2

# switch to workspace
bindsym $mod+1 workspace number $ws01
bindsym $mod+2 workspace number $ws02
bindsym $mod+3 workspace number $ws03
bindsym $mod+4 workspace number $ws04
bindsym $mod+5 workspace number $ws05
bindsym $mod+6 workspace number $ws06
bindsym $mod+7 workspace number $ws07
bindsym $mod+8 workspace number $ws08
bindsym $mod+9 workspace number $ws09
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws01
bindsym $mod+Shift+2 move container to workspace number $ws02
bindsym $mod+Shift+3 move container to workspace number $ws03
bindsym $mod+Shift+4 move container to workspace number $ws04
bindsym $mod+Shift+5 move container to workspace number $ws05
bindsym $mod+Shift+6 move container to workspace number $ws06
bindsym $mod+Shift+7 move container to workspace number $ws07
bindsym $mod+Shift+8 move container to workspace number $ws08
bindsym $mod+Shift+9 move container to workspace number $ws09
bindsym $mod+Shift+0 move container to workspace number $ws10

bindsym $mod+g exec i3-input -F 'workspace %s' -l 2 -P 'Go to Workspace: '
bindsym $mod+m exec i3-input -F 'move container to workspace %s' -l 2 -P 'Move to Workspace: '

bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to output next; focus output next


# ╔═╗┌─┐┌─┐┬┌─┐┌┐┌  ╦ ╦╦╔═╔═╗
# ╠═╣└─┐└─┐││ ┬│││  ║║║╠╩╗╚═╗
# ╩ ╩└─┘└─┘┴└─┘┘└┘  ╚╩╝╩ ╩╚═╝

assign [class="steam"] gm
assign [title="Steam"] gm
assign [title="Signal"] fa
assign [class="Nyxt"] nt
assign [class="Upwork"] uw

for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class="Dunst"] floating enable


# ╔═╗┌┬┐┬ ┬┌─┐┬─┐┌─┐
# ║ ║ │ ├─┤├┤ ├┬┘└─┐
# ╚═╝ ┴ ┴ ┴└─┘┴└─└─┘

# __Others__


set $i3_mode [r]eload re[s]tart [e]xit

# resize window (you can also use the mouse for that)
mode "$i3_mode" {
# reload the configuration file
    bindsym r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym s restart
# exit i3 (logs you out of your X session)
    bindsym e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+e mode "default"
}



# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

set $power_mode [l]ock [m]onitor [s]suspend s[h]utdown

mode "$power_mode" {
    bindsym l exec --no-startup-id betterlockscreen -l & sleep 5 && xset dpms force off , mode "default"
    bindsym s exec --no-startup-id systemctl suspend , mode "default"
    bindsym m exec --no-startup-id xset dpms force off , mode "default"
    bindsym h exec --no-startup-id poweroff , mode "default"

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+x mode "default"
}

set $mode_launcher [f]x [i]j f[s] [k]p [h]m [c]q [b]3d k[r] [v]im [y]azi vbo[x]

mode "$mode_launcher" {
    bindsym i exec intellij-idea-ultimate-edition, mode "default"
    bindsym f exec firefox-nightly, mode "default"
    bindsym s exec flameshot gui, mode "default"
    bindsym k exec keepassxc, mode "default"
    bindsym h exec nautilus, mode "default"
    bindsym c exec copyq toggle, mode "default"
    bindsym u exec /opt/Upwork/upwork, mode "default"
    bindsym l exec gnome-calculator, mode "default"
    bindsym b exec blender, mode "default"
    bindsym r exec krita, mode "default"
    bindsym v exec wezterm start vim, mode "default"
    bindsym y exec wezterm start yazi, mode "default"
    bindsym x exec virtualbox, mode "default"

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+o mode "default"
}


set $screenshot [f]ull [s]creen [l]auncher [g]ui [c]onfig

mode "$screenshot" {
    bindsym f exec flameshot full, mode "default"
    bindsym s exec flameshot screen, mode "default"
    bindsym l exec flameshot launcher, mode "default"
    bindsym g exec flameshot gui, mode "default"
    bindsym c exec flameshot config, mode "default"

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+c mode "default"
}



bindsym $mod+c mode "$screenshot"
bindsym $mod+r mode "resize"
bindsym $mod+x mode "$power_mode"
bindsym $mod+o mode "$mode_launcher"
bindsym $mod+e mode "$i3_mode"

# ╦ ╦┌┬┐┬┬  ┬┌┬┐┬┌─┐┌─┐
# ║ ║ │ ││  │ │ │├┤ └─┐
# ╚═╝ ┴ ┴┴─┘┴ ┴ ┴└─┘└─┘

# change wallpaper
bindsym $mod+Shift+Ctrl+w exec "$HOME/bin/change_wall.sh > ~/tmp/logs/change_wall.log"
# delete current wallpaper
bindsym $mod+Shift+Ctrl+d exec "cat $HOME/tmp/logs/change_wall.log >> $HOME/tmp/logs/rem_wall.log"

# finally apply layouts
exec --no-startup-id "i3-msg 'workspace og; append_layout /home/mahmood/Dropbox/configs/tmndesk/i3/workspace-og.json'"
exec --no-startup-id "i3-msg 'workspace nt; append_layout /home/mahmood/Dropbox/configs/tmndesk/i3/workspace-nt.json'"
# TODO: Add more auto layout things

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#     position top
#     status_command papersway --i3status
# }


# bar {
#     position top
#     strip_workspace_numbers yes
#     status_command i3status-rs
# 
# }
