gradle_subprojects=( ${(Q)"${(z)$(<<\EO:gradle_subprojects

EO:gradle_subprojects
)}"} )
gradle_tasks=( ${(Q)"${(z)$(<<\EO:gradle_tasks
'buildNeeded:Assembles and tests this project and all projects it depends on.' 'help:Displays a help message.' 'check:Runs all checks.' 'clean:Deletes the build directory.' 'javaToolchains:Displays the detected java toolchains.' 'tasks:Displays the tasks runnable from root project '\''eis'\''.' 'bootBuildImage:Builds an OCI image of the application using the output of the bootJar task' 'assemble:Assembles the outputs of this project.' 'bootJar:Assembles an executable jar archive containing the main classes and their dependencies.' 'init:Initializes a new Gradle build.' 'test:Runs the test suite.' 'jar:Assembles a jar archive containing the main classes.' 'generateEffectiveLombokConfigs:Generate effective Lombok configurations for source-set '\''main'\''' 'dependencyManagement:Displays the dependency management declared in root project '\''eis'\''.' 'processTestResources:Processes test resources.' 'model:Displays the configuration model of root project '\''eis'\''. [deprecated]' 'delombok:Runs delombok on the main source-set' 'classes:Assembles main classes.' 'projects:Displays the sub-projects of root project '\''eis'\''.' 'compileJava:Compiles main Java source.' 'buildEnvironment:Displays all buildscript dependencies declared in root project '\''eis'\''.' 'build:Assembles and tests this project.' 'outgoingVariants:Displays the outgoing variants of root project '\''eis'\''.' 'bootRunMainClassName:Resolves the name of the application'\''s main class for the bootRun task.' 'wrapper:Generates Gradle wrapper files.' 'cleanIdea:Cleans IDEA project files (IML, IPR)' 'cleanIdeaModule:' 'dependencyInsight:Displays the insight into a specific dependency in root project '\''eis'\''.' 'properties:Displays the properties of root project '\''eis'\''.' 'prepareKotlinBuildScriptModel:' 'testClasses:Assembles test classes.' 'javadoc:Generates Javadoc API documentation for the main source code.' 'ideaModule:Generates IDEA module files (IML)' 'generateTestEffectiveLombokConfigs:Generate effective Lombok configurations for source-set '\''test'\''' 'bootJarMainClassName:Resolves the name of the application'\''s main class for the bootJar task.' 'openIdea:Opens the IDEA project' 'ideaProject:Generates IDEA project file (IPR)' 'buildDependents:Assembles and tests this project and all projects that depend on it.' 'compileTestJava:Compiles test Java source.' 'generateTestEffectiveLombokConfig1:Generate effective Lombok configuration for '\''/home/mahmood/IdeaProjects/spring_boot_demo/samples/SampleProjects/eis/eis/src/test/java'\'' of source-set '\''test'\''.' 'cleanIdeaWorkspace:' 'delombokTest:Runs delombok on the test source-set' 'ideaWorkspace:Generates an IDEA workspace file (IWS)' 'components:Displays the components produced by root project '\''eis'\''. [deprecated]' 'idea:Generates IDEA project files (IML, IPR, IWS)' 'generateMainEffectiveLombokConfig1:Generate effective Lombok configuration for '\''/home/mahmood/IdeaProjects/spring_boot_demo/samples/SampleProjects/eis/eis/src/main/java'\'' of source-set '\''main'\''.' 'bootRun:Runs this project as a Spring Boot application.' 'processResources:Processes main resources.' 'dependentComponents:Displays the dependent components of components in root project '\''eis'\''. [deprecated]' 'cleanIdeaProject:' 'dependencies:Displays all dependencies declared in root project '\''eis'\''.'
EO:gradle_tasks
)}"} )
